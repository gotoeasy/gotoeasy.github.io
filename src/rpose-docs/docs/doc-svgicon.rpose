[view]
<div @class="box-sizing--border-box padding-0_20px_20px_20px">

    <doc-title>图标组件</doc-title>
    图标基本上是以SVG为主了，通常，是到图标网站搜索图标、注册用户、下载、本地整理．．．等等步骤，终于拿下，然后，然后下回继续重复<br>
    <br>
    <ui-badge>{'<svgicon>'}</ui-badge>就是为减少这些重复劳动而来，是个透明化使用svg图标的组件<br>

<!---------------------------------------------------------------------------------------->
    <doc-title>1.1 引用图标目录中的SVG</doc-title>
    工程上，为了统一管理，通常会配置图标目录<br>
    然后复制需要的svg图标到里面，用文件名区分不同图标<br>
    <br>
    rpose也是这个思路，且要求<ui-badge type="danger">文件名不得重复</ui-badge>
```rpose
// rpose.config.btf
// 这是个缺省配置
\[path]
svgicons : resources/svgicons
```

    复制好图标文件后，使用就比较简单了<br>
    使用<ui-badge>{'<svgicon>'}</ui-badge>标签指定<ui-badge>name</ui-badge>属性就行，看效果 <a href="demo/demo-svgicon-d1.html" target="_blank"><svgicon name="link" fill="blue"/></a><br>
```rpose
// demo-svgicon-d1.rpose
\[view]
<svgicon name="chart"/>

\[mount]
body
```

<!---------------------------------------------------------------------------------------->
    <doc-title>1.2 修改图标显示效果</doc-title>
    比如，默认高宽是16px，直接通过属性便可以修改
```rpose
// demo-svgicon-d2-1.rpose
\[view]
<div @class="height-50vh display-flex justify-content-center align-items-center">
    <svgicon name="chart" fill="#dc483d" height="128"/>
</div>

\[mount]
body
```

    这里修改了大小，还设定了<ui-badge>fill</ui-badge>属性，也就是说那些svg支持的属性都是可以用的，看效果 <a href="demo/demo-svgicon-d2-1.html" target="_blank"><svgicon name="link" fill="blue"/></a><br>
    <br>
    通过样式控制当然也是可以的，比如下面这样 <a href="demo/demo-svgicon-d2-2.html" target="_blank"><svgicon name="link" fill="blue"/></a><br>

```rpose
// demo-svgicon-d2-2.rpose
\[view]
<div @class="height-50vh display-flex justify-content-center align-items-center">
    <svgicon name="404" class="icon404"/>
</div>

\[css]
.icon404{
    fill: darkgoldenrod;
    width: 200px;
    height: 200px;
}

\[mount]
body
```

<!---------------------------------------------------------------------------------------->
    <doc-title>1.3 按内联symbol定义方式显示</doc-title>
    不同方式有不同的特点<br>
    如果想按内联symbol定义的方式显示，需指定<ui-badge>type</ui-badge>属性 <a href="demo/demo-svgicon-d3.html" target="_blank"><svgicon name="link" fill="blue"/></a><br>
```rpose
// demo-svgicon-d3.rpose
\[view]
<div>
    <svgicon name="404" height="64" type="inline-symbol"/>
    <svgicon name="bug" height="64" type="inline-symbol"/>
    <svgicon name="example" height="64" type="inline-symbol"/>
</div>

\[mount]
body
```

    目前type共三种方式可选：<br>
    <ui-badge type="info">1</ui-badge>直接内联显示<ui-badge>svg</ui-badge>（缺省时默认）<br>
    <ui-badge type="info">2</ui-badge>内联symbol定义<ui-badge>inline-symbol</ui-badge><br>
    <ui-badge type="info">3</ui-badge>外部symbol定义<ui-badge>link-symbol</ui-badge><br>
    <br>
    各有长短，按需选用
    <br>
    <ui-badge type="danger">注：</ui-badge>图标目录中的全部svg图标文件都会被定义为symbol<br>
    图标的默认高宽都是16px，如果图标原始高宽不等，需自行设定合适高宽属性


<!---------------------------------------------------------------------------------------->
    <doc-title>1.4 按外部symbol定义方式显示</doc-title>
    有时想把symbol定义作成外部链接文件使用<br>
    就是symbol定义在单独文件，需要请求取得<br>
    这时<ui-badge>type</ui-badge>属性就设定为<ui-badge>link-symbol</ui-badge>，看效果 <a href="demo/demo-svgicon-d4.html" target="_blank"><svgicon name="link" fill="blue"/></a><br>
```rpose
// demo-svgicon-d4.rpose
\[view]
<div>
    <svgicon name="dashboard" height="64" fill="blue" type="link-symbol"/>
    <svgicon name="bug" class="icon-bug" type="link-symbol"/>
    <svgicon name="example" height="64" fill="deeppink" type="link-symbol"/>
</div>

\[css]
.icon-bug{
    fill: red;
    width: 64px;
    height: 64px;
}

\[mount]
body
```

    <ui-badge type="danger">注：</ui-badge>图标目录中的全部svg图标文件都会被定义为symbol
    


<!---------------------------------------------------------------------------------------->
    <doc-title>1.5 直接内联并用表达式</doc-title>
    没有表达式时，是编译确定文件<br>
    有时需要运行期确定图标，这时可用表达式达到目的，看效果 <a href="demo/demo-svgicon-d5.html" target="_blank"><svgicon name="link" fill="blue"/></a>
```rpose
// demo-svgicon-d5.rpose
\[view]
<svgicon name="{'40' + '4'}"/>

\[mount]
body
```

    表达式的最终结果应该是文件名<br>
    组件通过比较文件名确定要显示的图标，工程图标目录中的图标都能用<br>


<!---------------------------------------------------------------------------------------->
    <doc-title>1.6 内联symbol定义并用表达式</doc-title>
    也是支持表达式的，看效果 <a href="demo/demo-svgicon-d6.html" target="_blank"><svgicon name="link" fill="blue"/></a><br>
    也是按文件名来确定要显示的图标，范围限于工程图标目录
```rpose
// demo-svgicon-d6.rpose
\[view]
<svgicon name={'clip'+'board'} height="200" type="inline-symbol"/>

\[mount]
body
```


<!---------------------------------------------------------------------------------------->
    <doc-title>1.7 外部symbol定义并用表达式</doc-title>
    同样支持表达式，同样按文件名确定图标，同样是工程图标目录中的图标都能用，看效果 <a href="demo/demo-svgicon-d7.html" target="_blank"><svgicon name="link" fill="blue"/></a>
```rpose
// demo-svgicon-d7.rpose
\[view]
<svgicon name={'clipboard'} height="200" fill="#abcdef" type="link-symbol"/>

\[mount]
body
```



<!---------------------------------------------------------------------------------------->
    <doc-title>1.8 配置添加svg图标</doc-title>
    不想复制图标的话，也可以通过配置添加 <a href="demo/demo-svgicon-d8.html" target="_blank"><svgicon name="link" fill="blue"/></a>
```rpose
// rpose.config.btf
\[svgicon]
500px = @fortawesome/fontawesome-free:500px     // 引入图标500px.svg，图标名还是用500px
size-500 = @fortawesome/fontawesome-free:500px  // 引入图标500px.svg，图标名改成size-500


// demo-svgicon-d8.rpose
\[view]
<div>
    <svgicon name={'500px'} height="200" fill="#abcdef" type="link-symbol"/>
    <svgicon name={'size-500'} height="100" fill="#abcdef" type="inline-symbol"/>
</div>

\[mount]
body
```
    
    <ui-badge type="info">[svgicon]格式：</ui-badge><ui-badge>name</ui-badge>=<ui-badge>pkg</ui-badge>:<ui-badge>svgfilter</ui-badge><br>
    <ui-badge>pkg</ui-badge>是个npm包名<br>
    <ui-badge>svgfilter</ui-badge>是文件过滤器，可以使用通配符，单一<ui-badge>?</ui-badge>代表文件名的任意一个字符，单一<ui-badge>*</ui-badge>代表任意文件名，两个<ui-badge>**</ui-badge>代表任意目录任意文件名<br>
    <ui-badge>name</ui-badge>是重新起的图标名，不想改名时也可简化的用<ui-badge>*</ui-badge>替代<br>
    为了方便确认，一行定义一个图标


<!---------------------------------------------------------------------------------------->
    <doc-title>小结</doc-title>
    通过使用<ui-badge>{'<svgicon>'}</ui-badge>，关于图标，就只需关心图标的来源，以及声明展示方式，剩余事情由框架代劳<br>
    为方便管理，图标的来源设计为图标目录以及配置文件<br>
   
    <doc-footer>Rpose Documents | <a href="https://github.com/gotoeasy/rpose/blob/master/LICENSE" style="text-decoration:none">MIT License</a></doc-footer>

</div>
