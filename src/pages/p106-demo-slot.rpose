[view]
<div>
    <ui-navbar />
    <ui-sidemenu />
    <div class="main">

<ui-blockquote text="6.1 插槽的基本使用方式"/>
插槽简单的说就是一个组件占位符，标准html有个slot标签，rpose也是用这个<br>
写一个含slot标签的组件<br>
```rpose
// demo-slot-component.rpose
\[view]
<ul>
    <li><slot name="my-slot1"></slot></li>
    <li><slot name="my-slot2"></slot></li>
</ul>
```

再写个使用该组件的页面<br>
```rpose
// demo-6-1-slot-page.rpose
\[view]
<demo-slot-component>
    <template slot="my-slot1">hello slot1</template>
    <div slot="my-slot2">hello slot2</div>
</demo-slot-component>

\[mount]
body
```

效果应该是li中的slot标签分别被替换成文本“hello slot1”和“hello slot2”了 <a href="demo-6-1-slot-page.html" target="_blank">看看效果</a><br>
使用还算简单，写一个组件占位，需要用slot标签，再起个名<br>
使用含占位的组件，写个要占位的模板，要用slot属性声明和什么名称的插槽关联<br>
占位用的模板标签并没有限制必须是template，除slot以外的能用的标签都行<br>

<ui-line/>
<ui-blockquote text="6.2 单一插槽时支持缺省写法"/>
有很多时候占位插槽只有一个，如果按上面的基本用法，感觉就有点啰嗦了
```rpose
// component
\[view]
<ul>
    <li><slot name="my-slot"></slot></li>              // 啰嗦，就唯一一个插槽，应该可以省略起名
</ul>

// page
\[view]
<demo-slot-component>
    <template slot="my-slot">hello slot</template>    // 啰嗦，就一个唯一的模板，应该可以省略不写
</demo-slot-component>
```

修改后就是这样了：
```rpose
// demo-slot-component-default.rpose
\[view]
<ul>
    <li><slot/></li>
</ul>

// demo-6-2-slot-page-default.rpose
\[view]
<demo-slot-component-default>
    hello slot
</demo-slot-component-default>

\[mount]
body
```

瞬间清爽，<a href="demo-6-2-slot-page-default.html" target="_blank">看看效果</a><br>

<ui-line/>
<ui-blockquote text="6.3 布局例子"/>
写一个布局：整体页面顶部一个header，下面分左右，左边是menu，右边是page
```rpose
// demo-layout.rpose
\[view]
<div class='layout'>
    <div class='layout-header'><slot name="header"/></div> 
    <div class='layout-main'>
        <div class='layout-menu'><slot name="menu"/></div> 
        <div class="layout-resizebar"/>
        <div class='layout-page'><slot name="page"/></div> 
    </div> 
</div>

\[less]
// 代码省略
```

再写个页面模拟
```rpose
// demo-6-3-layout.rpose
\[view]
<demo-layout>
    <div slot="header">header</div> 
    <div slot="menu">menu</div> 
    <div slot="page">page<br><demo-3-4-button/></div> 
</demo-layout>

\[mount]
body
```

<a href="demo-6-3-layout.html" target="_blank">看看效果</a><br>





<ui-line/>

        <ui-blockquote text="6.4 小结"/>
        插槽是个必须功能，本节介绍rpose中的插槽使用方法<br>
        单一插槽提供缺省写法<br>
        <br>
        
<br>
<ui-line/>
        <ui-button value="5 简便的预渲染方案" onclick="pre" />
        <span style="margin:0 80px 0 0"></span>
        <ui-button value="7 下一个姿势（TODO）" onclick="next" disabled />
    </div>


<ui-line/>
    <div style="text-align:center;margin-bottom:20px">青松 2019.01</div>

</div>

[actions]
{
    pre:e=>{
        location.href = 'p105-demo-pre-render.html';
    },
    next:e=>{
        location.href = 'xxxxxxxxxx.html';
    },
}


[mount]
body

[css]
body{
	margin: 0;
    background-color: #F9F9F9;
}

.main{
	margin: 15px;
}
